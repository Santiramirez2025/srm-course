import React, { useState } from 'react';
import { MessageSquare, AlignLeft, Map, Megaphone, Lightbulb, Copy, CheckCircle, Sparkles } from 'lucide-react';

export const ComunicacionMensajesContent = () => {
  const [mensajeCorto, setMensajeCorto] = useState('');
  const [mensajeLargo, setMensajeLargo] = useState({
    quien: '',
    resultado: '',
    tiempo: '',
    garantia: '',
    polarizacion: ''
  });
  const [estrategia, setEstrategia] = useState('');
  const [pitch, setPitch] = useState({
    promesa: '',
    estrategia: '',
    garantia: '',
    ultimatum: '',
    empaque: ''
  });
  const [seccionActiva, setSeccionActiva] = useState<number | null>(null);
  const [copiado, setCopiado] = useState<string | null>(null);

  const ejemplosReales = [
    {
      marca: 'Nike',
      mensaje: 'Just Do It',
      explicacion: 'No habla de zapatillas, habla de la actitud: ser valiente y activo.'
    },
    {
      marca: 'Apple',
      mensaje: 'Think Different',
      explicacion: 'No habla de computadoras, habla de sentirse √∫nico e innovador.'
    },
    {
      marca: 'L\'Or√©al',
      mensaje: 'Because You\'re Worth It',
      explicacion: 'Habla de autoestima y valor personal, no de maquillaje.'
    }
  ];

  const componentes = [
    {
      id: 1,
      icon: <MessageSquare className="w-6 h-6" />,
      titulo: 'El Mensaje Corto',
      emoji: 'üß†',
      subtitulo: 'Tu carta de presentaci√≥n (3-6 palabras)',
      descripcion: 'Es lo primero que la gente va a recordar de vos. Tiene que ser fuerte y clara.',
      caracteristicas: [
        'Clara: se entiende al instante',
        'Fuerte: genera emoci√≥n o curiosidad',
        'Memorable: f√°cil de recordar y compartir'
      ],
      tips: [
        'No expliques paso a paso lo que hac√©s',
        'Habl√° de la transformaci√≥n que logr√°s',
        'Conect√° con el deseo profundo del cliente'
      ]
    },
    {
      id: 2,
      icon: <AlignLeft className="w-6 h-6" />,
      titulo: 'El Mensaje Largo',
      emoji: 'üìù',
      subtitulo: 'Ampli√° el zoom sin perder fuerza (1-4 oraciones)',
      descripcion: 'Explica claramente a qui√©n ayud√°s, qu√© resultado entreg√°s, en cu√°nto tiempo y con qu√© garant√≠a.',
      caracteristicas: [
        'A qui√©n ayud√°s',
        'Qu√© resultado entreg√°s',
        'En cu√°nto tiempo',
        'Qu√© garant√≠a ofrec√©s'
      ],
      tips: [
        'S√© claro y concreto',
        'Usa n√∫meros o plazos tangibles',
        'Inclu√≠ una garant√≠a cre√≠ble'
      ]
    },
    {
      id: 3,
      icon: <Map className="w-6 h-6" />,
      titulo: 'La Estrategia',
      emoji: '‚öôÔ∏è',
      subtitulo: '¬øC√≥mo vas a lograr el resultado?',
      descripcion: 'Mostr√° que ten√©s un camino claro, bien pensado y probado. No cuentes todo, solo genera confianza.',
      caracteristicas: [
        'Un m√©todo claro y estructurado',
        'Pasos concretos que dan confianza',
        'Sin improvisar, con sistema'
      ],
      tips: [
        'No tiene que contar todos los secretos',
        'Solo despertar inter√©s y dar seguridad',
        'Dejar con ganas de saber m√°s'
      ]
    },
    {
      id: 4,
      icon: <Megaphone className="w-6 h-6" />,
      titulo: 'El Pitch Final',
      emoji: 'üí•',
      subtitulo: 'Tu mensaje estrella (menos de 2 minutos)',
      descripcion: 'La presentaci√≥n completa de tu oferta, lista para usar en videos, webs, correos, llamadas.',
      caracteristicas: [
        'La Promesa: resultado concreto',
        'La Estrategia: c√≥mo lo logr√°s',
        'La Garant√≠a: qu√© pasa si no funciona',
        'El Ultim√°tum: qu√© pierde si no act√∫a',
        'El Empaque: comparaci√≥n clara'
      ],
      tips: [
        'Debe leerse en menos de 2 minutos',
        'Hacer pensar: "Esto es justo lo que necesito"',
        'Es tu carta maestra en cualquier situaci√≥n'
      ]
    }
  ];

  const generarMensajeLargo = () => {
    if (!mensajeLargo.quien || !mensajeLargo.resultado || !mensajeLargo.tiempo) {
      return null;
    }

    let mensaje = `Te ayudo a ${mensajeLargo.quien} a lograr ${mensajeLargo.resultado} en ${mensajeLargo.tiempo}.`;
    
    if (mensajeLargo.garantia) {
      mensaje += ` ${mensajeLargo.garantia}`;
    }
    
    if (mensajeLargo.polarizacion) {
      mensaje += `\n\n‚ö†Ô∏è Esto NO es para vos si ${mensajeLargo.polarizacion}`;
    }

    return mensaje;
  };

  const generarPitchCompleto = () => {
    if (!pitch.promesa || !pitch.estrategia || !pitch.garantia) {
      return null;
    }

    return `üéØ La Promesa:\n${pitch.promesa}\n\n‚öôÔ∏è C√≥mo lo logramos:\n${pitch.estrategia}\n\nüõ°Ô∏è Garant√≠a:\n${pitch.garantia}\n\n‚ö†Ô∏è El Ultim√°tum:\n${pitch.ultimatum || 'Pod√©s seguir igual... o probar algo que s√≠ funciona.'}\n\nüì¶ En resumen:\n${pitch.empaque || 'Somos la soluci√≥n m√°s clara y efectiva para tu problema.'}`;
  };

  const copiarTexto = (texto: string, id: string) => {
    navigator.clipboard.writeText(texto);
    setCopiado(id);
    setTimeout(() => setCopiado(null), 2000);
  };

  return (
    <div className="space-y-8">
      {/* Hero */}
      <div className="relative overflow-hidden rounded-xl bg-gradient-to-br from-blue-600 via-indigo-600 to-purple-700 p-8 text-white">
        <div className="absolute inset-0 bg-black/10" />
        <div className="relative z-10 text-center">
          <p className="text-sm font-bold uppercase tracking-wider text-blue-200 mb-2">
            M√≥dulo 8 ¬∑ El Arte de Comunicar Valor
          </p>
          <h1 className="text-4xl sm:text-5xl font-bold mb-4">
            üéôÔ∏è Mensajes Irresistibles
          </h1>
          <p className="text-xl text-blue-100 max-w-3xl mx-auto">
            C√≥mo construir ofertas que el mercado no pueda ignorar
          </p>
        </div>
      </div>

      {/* Intro */}
      <div className="bg-gradient-to-br from-gray-50 to-gray-100 p-6 rounded-xl border-2 border-gray-300">
        <h2 className="text-2xl font-bold text-gray-900 mb-4">
          üéØ De qu√© se trata esto
        </h2>
        <div className="space-y-4">
          <p className="text-lg text-gray-800">
            Imagin√° que ten√©s algo valioso entre manos: una soluci√≥n real, que transforma vidas o negocios.
          </p>
          <p className="text-lg text-gray-800">
            Ahora, la pregunta es... <strong>¬øc√≥mo lo cont√°s de forma que el mercado no solo entienda tu valor, sino que lo desee, lo busque y est√© dispuesto a pagarlo sin pensarlo dos veces?</strong>
          </p>
          <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
            <p className="text-gray-800">
              <strong>Este m√≥dulo te ense√±a a convertir tu oferta en un activo irresistible.</strong> No estamos hablando de slogans vac√≠os o discursos forzados. Esto es estrategia pura, aplicada.
            </p>
          </div>
        </div>
      </div>

      {/* Ejemplos de Marcas Famosas */}
      <div className="bg-gradient-to-br from-yellow-50 to-orange-50 p-6 rounded-xl border-2 border-yellow-200">
        <h2 className="text-2xl font-bold text-gray-900 mb-4">
          üí° Ejemplos que Funcionan
        </h2>
        <p className="text-gray-700 mb-6">
          Estas marcas no explican lo que hacen. Hablan de la transformaci√≥n, la identidad y el sentimiento.
        </p>
        <div className="grid md:grid-cols-3 gap-4">
          {ejemplosReales.map((ejemplo, idx) => (
            <div key={idx} className="bg-white p-5 rounded-lg border-2 border-yellow-300">
              <p className="font-bold text-gray-900 mb-2">{ejemplo.marca}</p>
              <p className="text-2xl font-bold text-yellow-700 mb-3">"{ejemplo.mensaje}"</p>
              <p className="text-sm text-gray-600">{ejemplo.explicacion}</p>
            </div>
          ))}
        </div>
        <div className="mt-6 bg-yellow-100 p-4 rounded-lg border-l-4 border-yellow-500">
          <p className="text-gray-800">
            <strong>¬øQu√© tienen en com√∫n?</strong> No explican paso a paso. Hablan de transformaci√≥n, identidad y deseo profundo.
          </p>
        </div>
      </div>

      {/* Los 4 Componentes */}
      <div className="space-y-6">
        {componentes.map((comp) => (
          <div key={comp.id} className="bg-white rounded-xl border-2 border-gray-200 overflow-hidden">
            {/* Header */}
            <button
              onClick={() => setSeccionActiva(seccionActiva === comp.id ? null : comp.id)}
              className="w-full p-6 text-left flex items-center justify-between hover:bg-gray-50 transition-all"
            >
              <div className="flex items-center gap-4">
                <div className="p-3 rounded-lg bg-blue-100 text-blue-600">
                  {comp.icon}
                </div>
                <div>
                  <div className="flex items-center gap-2 mb-1">
                    <span className="text-2xl">{comp.emoji}</span>
                    <h3 className="text-xl font-bold text-gray-900">{comp.titulo}</h3>
                  </div>
                  <p className="text-sm text-gray-600">{comp.subtitulo}</p>
                </div>
              </div>
              <div className="text-2xl">
                {seccionActiva === comp.id ? '‚ñº' : '‚ñ∂'}
              </div>
            </button>

            {/* Contenido Expandible */}
            {seccionActiva === comp.id && (
              <div className="px-6 pb-6 border-t border-gray-200">
                <div className="pt-6 space-y-6">
                  {/* Descripci√≥n */}
                  <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
                    <p className="text-gray-800">{comp.descripcion}</p>
                  </div>

                  {/* Caracter√≠sticas */}
                  <div>
                    <p className="font-bold text-gray-900 mb-3">‚úÖ Debe incluir:</p>
                    <div className="space-y-2">
                      {comp.caracteristicas.map((caract, idx) => (
                        <div key={idx} className="flex items-start gap-2">
                          <CheckCircle className="w-5 h-5 text-green-600 flex-shrink-0 mt-0.5" />
                          <p className="text-gray-700">{caract}</p>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Tips */}
                  <div>
                    <p className="font-bold text-gray-900 mb-3">üí° Tips clave:</p>
                    <div className="space-y-2">
                      {comp.tips.map((tip, idx) => (
                        <div key={idx} className="bg-yellow-50 p-3 rounded border-l-4 border-yellow-400">
                          <p className="text-sm text-gray-700">{tip}</p>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Formularios seg√∫n el componente */}
                  {comp.id === 1 && (
                    <div className="bg-gray-50 p-5 rounded-lg">
                      <label className="block text-sm font-bold text-gray-700 mb-2">
                        Cre√° tu Mensaje Corto (3-6 palabras):
                      </label>
                      <input
                        type="text"
                        value={mensajeCorto}
                        onChange={(e) => setMensajeCorto(e.target.value)}
                        placeholder="Ej: Cre√°. Conect√°. Vend√©."
                        className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none"
                        maxLength={50}
                      />
                      {mensajeCorto && (
                        <div className="mt-4 p-4 bg-white rounded-lg border-2 border-blue-300">
                          <div className="flex items-center justify-between mb-2">
                            <p className="font-bold text-gray-900">Tu Mensaje:</p>
                            <button
                              onClick={() => copiarTexto(mensajeCorto, 'corto')}
                              className="px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm font-bold rounded transition-all"
                            >
                              {copiado === 'corto' ? <CheckCircle className="w-4 h-4" /> : <Copy className="w-4 h-4" />}
                            </button>
                          </div>
                          <p className="text-2xl font-bold text-blue-700">{mensajeCorto}</p>
                        </div>
                      )}
                    </div>
                  )}

                  {comp.id === 2 && (
                    <div className="bg-gray-50 p-5 rounded-lg space-y-4">
                      <div>
                        <label className="block text-sm font-bold text-gray-700 mb-2">
                          ¬øA qui√©n ayud√°s?
                        </label>
                        <input
                          type="text"
                          value={mensajeLargo.quien}
                          onChange={(e) => setMensajeLargo({...mensajeLargo, quien: e.target.value})}
                          placeholder="Ej: cl√≠nicas de est√©tica"
                          className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-bold text-gray-700 mb-2">
                          ¬øQu√© resultado entreg√°s?
                        </label>
                        <input
                          type="text"
                          value={mensajeLargo.resultado}
                          onChange={(e) => setMensajeLargo({...mensajeLargo, resultado: e.target.value})}
                          placeholder="Ej: organizar turnos sin perder sesiones"
                          className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-bold text-gray-700 mb-2">
                          ¬øEn cu√°nto tiempo?
                        </label>
                        <input
                          type="text"
                          value={mensajeLargo.tiempo}
                          onChange={(e) => setMensajeLargo({...mensajeLargo, tiempo: e.target.value})}
                          placeholder="Ej: 30 d√≠as"
                          className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-bold text-gray-700 mb-2">
                          ¬øQu√© garant√≠a ofrec√©s?
                        </label>
                        <input
                          type="text"
                          value={mensajeLargo.garantia}
                          onChange={(e) => setMensajeLargo({...mensajeLargo, garantia: e.target.value})}
                          placeholder="Ej: Si no funciona, te devolvemos el dinero"
                          className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-bold text-gray-700 mb-2">
                          Polarizaci√≥n (opcional): ¬øPara qui√©n NO es?
                        </label>
                        <input
                          type="text"
                          value={mensajeLargo.polarizacion}
                          onChange={(e) => setMensajeLargo({...mensajeLargo, polarizacion: e.target.value})}
                          placeholder="Ej: busc√°s soluciones r√°pidas sin comprometerte"
                          className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none"
                        />
                      </div>
                      {generarMensajeLargo() && (
                        <div className="mt-4 p-4 bg-white rounded-lg border-2 border-green-300">
                          <div className="flex items-center justify-between mb-2">
                            <p className="font-bold text-gray-900">Tu Mensaje Largo:</p>
                            <button
                              onClick={() => copiarTexto(generarMensajeLargo()!, 'largo')}
                              className="px-3 py-1 bg-green-600 hover:bg-green-700 text-white text-sm font-bold rounded transition-all flex items-center gap-2"
                            >
                              {copiado === 'largo' ? <CheckCircle className="w-4 h-4" /> : <Copy className="w-4 h-4" />}
                              Copiar
                            </button>
                          </div>
                          <p className="text-gray-800 whitespace-pre-wrap">{generarMensajeLargo()}</p>
                        </div>
                      )}
                    </div>
                  )}

                  {comp.id === 3 && (
                    <div className="bg-gray-50 p-5 rounded-lg">
                      <label className="block text-sm font-bold text-gray-700 mb-2">
                        Describe tu estrategia (sin contar todo):
                      </label>
                      <textarea
                        value={estrategia}
                        onChange={(e) => setEstrategia(e.target.value)}
                        placeholder="Ej: Usamos un sistema de 3 pasos probado con m√°s de 100 cl√≠nicas: automatizamos la agenda, recordamos turnos y analizamos patrones para optimizar horarios."
                        className="w-full p-4 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none min-h-[120px]"
                        rows={4}
                      />
                      {estrategia && (
                        <div className="mt-4 p-4 bg-white rounded-lg border-2 border-blue-300">
                          <div className="flex items-center justify-between mb-2">
                            <p className="font-bold text-gray-900">Tu Estrategia:</p>
                            <button
                              onClick={() => copiarTexto(estrategia, 'estrategia')}
                              className="px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm font-bold rounded transition-all flex items-center gap-2"
                            >
                              {copiado === 'estrategia' ? <CheckCircle className="w-4 h-4" /> : <Copy className="w-4 h-4" />}
                              Copiar
                            </button>
                          </div>
                          <p className="text-gray-800">{estrategia}</p>
                        </div>
                      )}
                    </div>
                  )}

                  {comp.id === 4 && (
                    <div className="bg-gray-50 p-5 rounded-lg space-y-4">
                      <div>
                        <label className="block text-sm font-bold text-gray-700 mb-2">
                          1. La Promesa (resultado concreto):
                        </label>
                        <input
                          type="text"
                          value={pitch.promesa}
                          onChange={(e) => setPitch({...pitch, promesa: e.target.value})}
                          placeholder="Ej: Te ayudamos a duplicar tus ventas en 90 d√≠as"
                          className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-bold text-gray-700 mb-2">
                          2. La Estrategia (c√≥mo lo logr√°s):
                        </label>
                        <textarea
                          value={pitch.estrategia}
                          onChange={(e) => setPitch({...pitch, estrategia: e.target.value})}
                          placeholder="Ej: Con un sistema probado de 3 pasos..."
                          className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none"
                          rows={3}
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-bold text-gray-700 mb-2">
                          3. La Garant√≠a (qu√© pasa si no funciona):
                        </label>
                        <input
                          type="text"
                          value={pitch.garantia}
                          onChange={(e) => setPitch({...pitch, garantia: e.target.value})}
                          placeholder="Ej: Si no ves resultados en 90 d√≠as, te devolvemos todo"
                          className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-bold text-gray-700 mb-2">
                          4. El Ultim√°tum (qu√© pierde si no act√∫a):
                        </label>
                        <input
                          type="text"
                          value={pitch.ultimatum}
                          onChange={(e) => setPitch({...pitch, ultimatum: e.target.value})}
                          placeholder="Ej: Pod√©s seguir igual... o probar algo que s√≠ funciona"
                          className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-bold text-gray-700 mb-2">
                          5. El Empaque (comparaci√≥n clara):
                        </label>
                        <input
                          type="text"
                          value={pitch.empaque}
                          onChange={(e) => setPitch({...pitch, empaque: e.target.value})}
                          placeholder="Ej: Somos como el Uber de las citas profesionales"
                          className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none"
                        />
                      </div>
                      {generarPitchCompleto() && (
                        <div className="mt-4 p-5 bg-white rounded-lg border-2 border-purple-300">
                          <div className="flex items-center justify-between mb-3">
                            <p className="font-bold text-gray-900 text-lg">üéØ Tu Pitch Completo:</p>
                            <button
                              onClick={() => copiarTexto(generarPitchCompleto()!, 'pitch')}
                              className="px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white font-bold rounded transition-all flex items-center gap-2"
                            >
                              {copiado === 'pitch' ? <CheckCircle className="w-5 h-5" /> : <Copy className="w-5 h-5" />}
                              Copiar Pitch
                            </button>
                          </div>
                          <div className="bg-gray-50 p-4 rounded">
                            <p className="text-gray-800 whitespace-pre-wrap leading-relaxed">{generarPitchCompleto()}</p>
                          </div>
                        </div>
                      )}
                    </div>
                  )}
                </div>
              </div>
            )}
          </div>
        ))}
      </div>

      {/* Lo que gan√°s */}
      <div className="bg-gradient-to-br from-green-50 to-emerald-50 p-6 rounded-xl border-2 border-green-200">
        <h2 className="text-2xl font-bold text-gray-900 mb-4">
          üöÄ ¬øQu√© gan√°s si aplic√°s todo esto?
        </h2>
        <div className="grid md:grid-cols-2 gap-4">
          {[
            'Mensajes que destacan, incluso cuando todo el mundo grita lo mismo',
            'Explicar tu oferta con tanta claridad que cualquiera lo entiende al instante',
            'Dar confianza desde el primer contacto',
            'Contar tu negocio en menos de 2 minutos de forma memorable'
          ].map((beneficio, idx) => (
            <div key={idx} className="flex items-start gap-3 bg-white p-4 rounded-lg border-2 border-green-200">
              <CheckCircle className="w-6 h-6 text-green-600 flex-shrink-0 mt-0.5" />
              <p className="text-gray-800">{beneficio}</p>
            </div>
          ))}
        </div>
      </div>

      {/* BONUS */}
      <div className="bg-gradient-to-br from-purple-50 to-pink-50 p-6 rounded-xl border-2 border-purple-200">
        <h2 className="text-2xl font-bold text-gray-900 mb-4 flex items-center gap-2">
          <Sparkles className="w-7 h-7 text-purple-600" />
          üîì BONUS: Desbloque√° tu Diferencial Invisible
        </h2>
        <div className="bg-white p-5 rounded-lg border-2 border-purple-300">
          <p className="text-gray-800 mb-4">
            Us√° este prompt para descubrir mensajes √∫nicos que nadie m√°s puede copiarte:
          </p>
          <div className="bg-purple-50 p-4 rounded border-2 border-purple-200">
            <p className="text-sm text-gray-800 font-mono">
              "Actu√° como mi cliente ideal frustrado y contame, en voz alta, qu√© problema tiene cada d√≠a, qu√© ha probado sin √©xito, qu√© busca desesperadamente, y qu√© desear√≠a encontrar en alguien como yo."
            </p>
          </div>
          <button
            onClick={() => copiarTexto('Actu√° como mi cliente ideal frustrado y contame, en voz alta, qu√© problema tiene cada d√≠a, qu√© ha probado sin √©xito, qu√© busca desesperadamente, y qu√© desear√≠a encontrar en alguien como yo.', 'bonus')}
            className="mt-4 w-full bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 rounded-lg transition-all flex items-center justify-center gap-2"
          >
            {copiado === 'bonus' ? <><CheckCircle className="w-5 h-5" /> Copiado</> : <><Copy className="w-5 h-5" /> Copiar Prompt</>}
          </button>
        </div>
      </div>

      {/* Cierre */}
      <div className="bg-gradient-to-br from-gray-900 to-black text-white p-8 rounded-xl">
        <h2 className="text-2xl font-bold mb-4 text-center">
          üíé No es sobre ventas. Es sobre liderazgo.
        </h2>
        <div className="space-y-4 text-center max-w-3xl mx-auto">
          <p className="text-lg text-gray-200">
            Dejar de pensar como vendedor y empezar a pensar c√≥mo puedo ofrecer valor.
          </p>
          <p className="text-xl text-gray-300">
            No es lo que hac√©s. Es c√≥mo lo empaquet√°s. C√≥mo lo cont√°s. Y c√≥mo lo hac√©s llegar a quien lo necesita.
          </p>
          <div className="bg-white/10 backdrop-blur p-6 rounded-lg mt-6">
            <p className="text-2xl font-bold text-yellow-300">
              üëâ Si constru√≠s estos activos con honestidad, claridad y empat√≠a‚Ä¶
            </p>
            <p className="text-xl mt-3">
              No solo vas a vender m√°s. Vas a liderar tu mercado.
            </p>
          </div>
        </div>
      </div>

      {/* Transici√≥n */}
      <div className="bg-gray-50 p-8 rounded-xl border-2 border-gray-200 text-center">
        <p className="text-2xl font-bold text-gray-900 mb-4">
          ‚úÖ Ya sab√©s c√≥mo comunicar tu oferta de forma irresistible...
        </p>
        <p className="text-xl text-gray-700">
          En el pr√≥ximo m√≥dulo aprender√°s d√≥nde y c√≥mo mostrar estos mensajes al mundo para que lleguen a tu cliente ideal.
        </p>
      </div>
    </div>
  );
};

export const comunicacionMensajesMetadata = {
  id: 8,
  title: "Comunicaci√≥n - Mensajes Irresistibles",
  type: "document" as const,
  duration: "35 min"
};